import React from 'react';
import './App.css';
import {
    AppBar,
    Button,
    makeStyles,
    Tab,
    Tabs,
    ThemeProvider,
    Toolbar,
    Typography,
    IconButton,
    Container, Box,
    BottomNavigation
} from "@mui/material";
import {createTheme} from "@mui/material";
import {BrowserRouter, Route, Routes } from "react-router-dom";
// Page imports
import Home from "./pages/Home";
import AboutPage from "./pages/AboutPage";
import LostItemPage from "./pages/LostItemPage";
import FoundItemPage from "./pages/FoundItemPage";
import LoginPage from "./pages/LoginPage";
import UserDashPage from "./pages/UserDashPage";

//Icon imports
import HomeIcon from '@mui/icons-material/Home';
import AccountCircleIcon from '@mui/icons-material/AccountCircle';
import PrivateRoute from './components/PrivateRoute';
import ResultsPage from "./pages/ResultsPage";


// const styles = makeStyles()

/**
 * Defines the basic "Found At Brown ("fab") theme that MUI components will use unless specifically overridden.
 * If not defined here, uses the MUI defaults. Some theme specifications have autogenerated accompanying colors
 * (that could be overridden if necessary) such as the "dark" and "light" versions of "main" colors, etc...
 */
const fabTheme = createTheme({
    palette: {
        // Main "Brown" Color (true to their internal policy)
        primary: {
            main: "#4E3629"
        },
        secondary: {
            main: '#FF0000',
        },
    }
});


// /**
//  * Defines styles!
//  * (N)
//  * Adopted from https://stackoverflow.com/a/48510444
//  * @param theme
//  */
// // @ts-ignore
// const styles = (theme) => ({
//     // Load app bar information from the theme
//     // We use this to displace components such that the toolbar doesn't cover them
//     toolbar: theme.mixins.toolbar,
// });



// Defines the "route" names to the other pages of the website (URL)
const routes = ["/found_item","/lost_item","/about", "/lost_item/results"];

function App() {
  return (
      <>
          {/*Everything in our app will by default inherit from this Theme Provider using the fabTheme defined above*/}
          <ThemeProvider theme={fabTheme}>
            <div className="App">

                {/*App bar at the top of the page*/}
                <AppBar color={"primary"} position={"static"}>
                    {/*Toolbar to help with AppBar spacing*/}
                    <Toolbar>
                        <Typography
                        variant={"h3"}
                        sx={[{ mr: "auto" }, { fontFamily: "Ubuntu" }, { mt: "auto" }, { letterSpacing: 1 }]}>
                            <strong>Found@Brown</strong>
                        </Typography>
                        <IconButton href={"/"} edge="start" color="inherit" aria-label="menu" sx={[{ ml: "auto" }, { mr: 3 }]}>
                            <HomeIcon />
                        </IconButton>
                        <IconButton color={"inherit"} href={"/login"}>
                            <AccountCircleIcon />
                        </IconButton>
                    </Toolbar>
                    {/*Tabs used for navigating pages*/}
                    <Tabs
                        value={window.location.pathname !== '/'?window.location.pathname : false}
                        // textColor="inherit"
                        indicatorColor="secondary"
                        variant="fullWidth"
                        // centered
                    >
                        <Tab label={<Typography sx={[{ fontFamily: "Source Sans Pro" }, { color: "white" }, {fontSize: "large"}, {letterSpacing: 1}]}>
                            <strong>I Found an Item</strong></Typography>} value={routes[0]} href={routes[0]} />
                        <Tab label={<Typography sx={[{ fontFamily: "Source Sans Pro" }, { color: "white" }, {fontSize: "large"}, {letterSpacing: 1}]}>
                            <strong>I Lost an Item</strong></Typography>} value={routes[1]} href={routes[1]} />
                        <Tab label={<Typography sx={[{ fontFamily: "Source Sans Pro" }, { color: "white" }, {fontSize: "large"}, {letterSpacing: 1}]}>
                            <strong>About</strong></Typography>} value={routes[2]} href={routes[2]} />
                    </Tabs>
                </AppBar>

                {/*Define the different pages we can route to in our application*/}
                <BrowserRouter>
                    <Routes>
                        {/*The home pages*/}
                        <Route path="/" element={<Home />} />
                        <Route path="/login" element={<LoginPage />}/>
                        <Route path="/dashboard" element={<UserDashPage />}/>

                        {/*Content pages*/}
                        <Route path={routes[0]} element={
                            // @ts-ignore
                            <PrivateRoute>
                                <FoundItemPage />
                            </PrivateRoute>
                        }
                        />
                        <Route path={routes[1]} element={
                            // @ts-ignore
                            <PrivateRoute>
                                <LostItemPage />
                            </PrivateRoute>
                        }
                        />
                        {/*TODO: If user already has item and going to recover page, the recover page
                        should be different (maybe a different page entirely)*/}
                        <Route path={routes[2]} element={<AboutPage />}/>

                        <Route path={routes[3]} element={
                            // @ts-ignore
                            <PrivateRoute>
                                <ResultsPage />
                            </PrivateRoute>
                        }
                        />

                        {/*404 Page? TODO: Maybe make it auto-redirect*/}
                        {/*<Route path={"/404"} element={<NotFoundPage />}/>*/}
                    </Routes>
                </BrowserRouter>

                <div>
                    <footer id={"foot"}>
                        <p>Â© Found@Brown Team</p>
                    </footer>
                </div>
            </div>
          </ThemeProvider>
      </>
  );
}

export default App;
